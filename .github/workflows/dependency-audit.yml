name: Dependency Audit

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday

jobs:
  audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install Socket CLI
        run: npm install -g @socketsecurity/cli
        
      - name: Run dependency audit
        run: |
          mkdir -p reports/socket
          
          # Scan backend
          if [ -d "backend" ]; then
            (cd backend && socket scan --json > ../reports/socket/backend.json)
            (cd backend && socket sbom --format cyclonedx > ../reports/socket/backend.cdx.json)
          fi
          
          # Scan admin dashboard
          if [ -d "admin-dashboard" ]; then
            (cd admin-dashboard && socket scan --json > ../reports/socket/admin-dashboard.json)
            (cd admin-dashboard && socket sbom --format cyclonedx > ../reports/socket/admin-dashboard.cdx.json)
          fi
          
          # Scan data ingestion
          if [ -d "data-ingestion" ]; then
            (cd data-ingestion && socket scan --json > ../reports/socket/data-ingestion.json)
            (cd data-ingestion && socket sbom --format cyclonedx > ../reports/socket/data-ingestion.cdx.json)
          fi
          
          # Scan frontend
          if [ -d "frontend" ]; then
            (cd frontend && socket scan --json > ../reports/socket/frontend.json)
            (cd frontend && socket sbom --format cyclonedx > ../reports/socket/frontend.cdx.json)
          fi
        env:
          SOCKET_API_TOKEN: ${{ secrets.SOCKET_API_TOKEN }}
          
      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: reports/socket/
          retention-days: 30
          
      - name: Comment PR with audit results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## 🔍 Dependency Audit Results\n\n';
            
            const reportsDir = 'reports/socket';
            if (fs.existsSync(reportsDir)) {
              const files = fs.readdirSync(reportsDir);
              const jsonFiles = files.filter(f => f.endsWith('.json') && !f.endsWith('.cdx.json'));
              
              if (jsonFiles.length > 0) {
                comment += '### 📦 Scanned Packages\n';
                jsonFiles.forEach(file => {
                  const packageName = file.replace('.json', '');
                  comment += `- **${packageName}**: [View Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
                });
              } else {
                comment += 'No dependency reports generated.\n';
              }
            } else {
              comment += 'Dependency audit failed to generate reports.\n';
            }
            
            comment += '\n### 📋 Next Steps\n';
            comment += '- Review any high-risk packages\n';
            comment += '- Update vulnerable dependencies\n';
            comment += '- Check license compliance\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
